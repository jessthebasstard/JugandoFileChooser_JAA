/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package SuperExplorador_JAA;

import java.awt.Image;
import java.io.IOException;
import java.lang.System.Logger;
import java.util.logging.Level;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author The Test
 */
public class SuperExplorador extends javax.swing.JFrame {
private MusicPlayer prueba;
    /**
     * Creates new form SuperExplorador
     */
    public SuperExplorador() {
        initComponents();
        exploradorArchivos.setControlButtonsAreShown(false);
        exploradorArchivos.addChoosableFileFilter(new FileNameExtensionFilter(
                "Imagenes", "jpg", "png"));
        exploradorArchivos.addChoosableFileFilter(new FileNameExtensionFilter(
                "Texto plano", "txt"));
        exploradorArchivos.addChoosableFileFilter(new FileNameExtensionFilter(
                "Word", "docx", "doc"));
        exploradorArchivos.addChoosableFileFilter(new FileNameExtensionFilter(
                "Audio", "wav"));

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        exploradorArchivos = new javax.swing.JFileChooser();
        jLabelImage = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        exploradorArchivos.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                exploradorArchivosPropertyChange(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(exploradorArchivos, javax.swing.GroupLayout.PREFERRED_SIZE, 432, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabelImage, javax.swing.GroupLayout.DEFAULT_SIZE, 430, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabelImage, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(exploradorArchivos, javax.swing.GroupLayout.PREFERRED_SIZE, 333, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(264, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void openImage() {

    }

    private void openTxt() throws IOException {
    
       
            Process p = Runtime.getRuntime().exec("cmd /c notepad " + exploradorArchivos.getSelectedFile().getPath());
       
    }
    
    private void openDoc() throws IOException {
   Runtime.getRuntime().exec("C:\\Program Files\\Microsoft Office\\root\\Office16\\WINWORD.EXE " + exploradorArchivos.getSelectedFile().getPath());
    }

    private void openAudio() {
      prueba =new MusicPlayer(exploradorArchivos);
      prueba.setVisible(true);
    }

    public JFileChooser getExploradorArchivos() {
        return exploradorArchivos;
    }
    
    

    private void exploradorArchivosPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_exploradorArchivosPropertyChange
        if (exploradorArchivos.getSelectedFile() != null) {
            if (exploradorArchivos.getSelectedFile().getName().endsWith(".wav")) {
               openAudio();
            }
            if (exploradorArchivos.getSelectedFile().getName().endsWith(".txt")) {
                try {
                    openTxt();
                } catch (IOException ex) {
                    java.util.logging.Logger.getLogger(SuperExplorador.class.getName()).log(Level.SEVERE, null, ex);
                }
            if (exploradorArchivos.getSelectedFile().getName().endsWith(".docx")) {
                    try {
                        openDoc();
                    } catch (IOException ex) {
                        java.util.logging.Logger.getLogger(SuperExplorador.class.getName()).log(Level.SEVERE, null, ex);
                    }
            }
            if (exploradorArchivos.getSelectedFile().getName().endsWith(".jpeg")) {
               muestraImagen();
            }
            
            
            }
        
            
        }

        // TODO add your handling code here:
    }//GEN-LAST:event_exploradorArchivosPropertyChange

    private void muestraImagen() {
        ImageIcon icono1 = new ImageIcon(exploradorArchivos.getSelectedFile().getPath());
        Image img = icono1.getImage();

        ImageIcon iconoEscalado = new ImageIcon(img.getScaledInstance(jLabelImage.getWidth(),
                jLabelImage.getHeight(), Image.SCALE_SMOOTH));

        jLabelImage.setIcon(iconoEscalado);
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SuperExplorador.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SuperExplorador.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SuperExplorador.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SuperExplorador.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SuperExplorador().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JFileChooser exploradorArchivos;
    private javax.swing.JLabel jLabelImage;
    // End of variables declaration//GEN-END:variables
}
